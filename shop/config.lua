---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Kevin.
--- DateTime: 05.12.2019 17:57
---

local sides  = require("sides")
local json   = require("json")
local math   = require("math")
local config = {}

------- helper functions
function config.getItemIdentityName(item, blacklist)
    -- still has problems with some IC2 items that suddenly have hasTag=false after crafting
    -- but are supposed to have hasTag=True before crafting..
    -- affected: "ic2:lapotron_crystal", "ic2:advanced_re_battery","ic2:re_battery", etc
    local name = ""
    local keys = {}
    local blk  = {}
    for key, val in pairs(config.identity_blacklist) do
        blk[key] = true
    end
    if blacklist == nil then
        blacklist = {}
    end
    for i, key in pairs(blacklist) do
        blk[key] = true
    end
    for key, value in pairs(item) do
        if key ~= "label" and key ~= "name" and key ~= "size" then
            keys[#keys + 1] = key
        end
    end
    table.sort(keys)
    table.insert(keys, 1, "label")
    table.insert(keys, 2, "name")
    for _, key in pairs(keys) do
        if blk[key] == nil then
            local it = item[key]
            if type(it) == "number" then
                it = it + .0 -- to enforce float representation on all numbers
            end
            it   = tostring(it)
            name = name .. it .. ";"
        end
    end
    return name
end

local function calculateCellsNeeded(trans)
    local cells             = 0
    local cell_slots_used   = config.maxSlots_portableCell
    local cell_items_stored = config.maxSize_portableCell
    table.sort(trans.item_pairs, function(a, b) return a.size > b.size end)
    for i, item in pairs(trans.item_pairs) do
        if item.size == config.maxSize_portableCell then
            cells = cells + 1
        else
            if cell_items_stored + item.size > config.maxSize_portableCell then
                cells             = cells + 1
                cell_slots_used   = 1
                cell_items_stored = item.size
            else
                cell_slots_used   = cell_slots_used + 1
                cell_items_stored = cell_items_stored + item.size
                if cell_slots_used >= config.maxSlots_portableCell then
                    cells             = cells + 1
                    cell_slots_used   = 0
                    cell_items_stored = 0
                end
            end
        end
    end
    if cells == 1 and cell_slots_used <= config.dropper_export_max_slots and cell_items_stored <= config.dropper_export_max_items then
        -- no cell needed
        trans.leased_cells      = 0
        trans.lease_value       = 0
        trans.transaction_value = trans.item_value
    else
        trans.leased_cells      = cells
        trans.lease_value       = cells * config.price_lease_storage_cell
        trans.transaction_value = trans.item_value + trans.lease_value
    end
end

function config.calculateExportActivations(item, size)
    local full_stack, restf = math.modf(size / item.maxSize)
    restf                   = size - (full_stack * item.maxSize)
    local half_stack, resth = math.modf(restf / (item.maxSize / 2))
    local single            = size - full_stack * item.maxSize - half_stack * (item.maxSize / 2)
    return full_stack, half_stack, single
end

function config.newTransaction()
    local trans             = {}
    trans.amount_items      = 0
    trans.item_value        = 0
    trans.lease_value       = 0
    trans.leased_cells      = 0
    trans.transaction_value = 0
    trans.item_pairs        = {}
    trans.buyer             = nil
    trans.addItem           = function(ident, item, size, price)
        local found = false
        for i, item in pairs(trans.item_pairs) do
            if item.ident == ident and item.size + size <= config.maxSize_portableCell then
                item.size  = item.size + size
                item.price = item.price + price
                found      = true
                break
            end
        end
        if not found then
            trans.item_pairs[#trans.item_pairs + 1] = { ["ident"] = ident, ["item"] = item, ["size"] = size, ["price"] = price }
        end
        trans.amount_items = trans.amount_items + size
        trans.item_value   = trans.item_value + price
        calculateCellsNeeded(trans)
    end
    trans.removeItem        = function(ident, size)
        for i, item in pairs(trans.item_pairs) do
            if item.ident == ident and item.size == size then
                trans.amount_items = trans.amount_items - size
                trans.item_value   = trans.item_value - item.price
                calculateCellsNeeded(trans)
                table.remove(trans.item_pairs, i)
                return true
            end
        end
        print("Item doesn't exist", ident, size)
        return false
    end
    trans.toJson            = function()
        local list      = {}
        local blacklist = { addItem    = true, removeItem = true, toJson = true,
                            item_pairs = true, getAmountOfItem = true }
        for key, value in pairs(trans) do
            if not blacklist[key] then
                list[key] = value
            end
        end
        list["item_pairs"] = {}
        for i, item in pairs(trans.item_pairs) do
            list.item_pairs[#list.item_pairs + 1] = { ["ident"] = item.ident, ["size"] = item.size, ["price"] = item.price }
        end
        return json.encode(list)
    end
    trans.getAmountOfItem   = function(ident)
        local amount = 0
        for i, item in pairs(trans.item_pairs) do
            if item.ident == ident then
                amount = amount + item.size
            end
        end
        return amount
    end
    return trans
end

-- ME controller Item storage
config.address_me_storage              = "3f3f80c3-653b-4518-a38a-26bf01b45048"
-- ME controller for ME Chest
config.address_me_chest                = "55844f40-6462-4725-b8f4-6ea19d74ec49"
-- ME controller Money
config.address_me_money                = "dc969cf5-b749-4da4-91a0-ef79a86397e3"
-- ME exportbus chest
config.address_export_stack            = "27b4b8fb-0e91-4cce-a705-774abffbcc4d"
config.side_export_stack               = sides.east
config.address_export_half             = "40d1445b-1c87-447c-8f75-3011aa1dafd1"
config.side_export_half                = sides.up
config.address_export_single           = "2cf1efcc-cb96-40a2-85b8-03c8366f5d16"
config.side_export_single              = sides.west
-- ME exportbus single item
config.address_export_single_dropper   = "773805e1-43b9-4d90-a8c6-c60e0caea6b6"
config.side_export_dropper             = sides.east
-- ME exportbus portable cell
config.address_export_portable_cell    = "a57be265-1e4f-48e0-9f15-137a2fa2db72"
config.side_export_portable_cell       = sides.down

-- Redstone block vacuum chest
config.address_redstone_vacuum_chest   = "b689de10-2fe1-42ce-b931-c51a648c687c"
config.side_redstone_vacuum_chest      = sides.north
-- Redstone block dropper
config.address_redstone_dropper        = "194d8cf9-26ea-48f5-b9b0-dc7601d95f57"
config.side_redstone_dropper           = sides.down
-- Redstone block autostart
config.address_redstone_autostart      = "f87c4380-4feb-401a-ab0a-bccc2b213cdf"

-- Transposer ME Chest export/import
config.address_transposer_me_chest     = "a26ffa56-e265-4105-b217-9306129a37e9"
config.side_transposer_me_chest_output = sides.up
config.side_transposer_me_chest_input  = sides.north
config.side_transposer_me_chest        = sides.south
-- Transposer input
config.address_transposer_input        = "04c8f534-167e-4dcf-a7d0-ca085cbfc45d"
config.side_floppy                     = sides.east
config.side_dropper_input              = sides.north
config.side_vacuum_input               = sides.south
config.side_ioport_input               = sides.up

-- Transposer for system flushing (remainder of export to 4k) --> not used at the moment
--config.address_transposer_flushing     = "58ff08c5-eb2a-4f66-911e-e4d1bc35cf7d"
--config.side_chest_flushing             = sides.up
--config.side_ioport_flushing            = sides.east
--config.side_mechest_flushing           = sides.down

-- Transposer Disk Drive for input of money
config.address_transposer_drive        = "04c8f534-167e-4dcf-a7d0-ca085cbfc45d"
config.side_drive_transposer_eject     = sides.east
config.side_drive_chest_eject          = sides.west

-- Transposer Money Disk Drive
config.address_transposer_money_drive  = "b07eb566-ab41-4f96-8fb3-0e45543b4f85"
config.side_money_drive                = sides.down
config.side_money_disk_input           = sides.up


-- Disk Drive input for money
config.address_disk_drive              = "37545ccb-a8ad-4c4b-aa11-26d9f3ba0278"

-- Disk Drive creating money
config.address_disk_drive_money        = "c2e94c1e-f8fb-48ee-b340-a3497a6fa0af"

-- Identity configurations
config.identity_blacklist              = { ["isCraftable"] = true, ["size"] = true,
                                           ["amounts"]     = true, ["label_friendly"] = true,
                                           ["categories"]  = true, ["stock"] = true }
config.identity_empty                  = "Air;minecraft:air;0.0;false;0.0;64.0;"
config.identity_portable_cell          = "Portable Cell;appliedenergistics2:portable_cell;0.0;true;32.0;1.0;"
config.nbt_portable_cell               = {
    ["maxDamage"] = 32, ["name"] = "appliedenergistics2:portable_cell", ["damage"] = 0,
    ["label"]     = "Portable Cell", ["maxSize"] = 1, ["hasTag"] = true }
config.identity_floppy_disk            = "opencomputers:storage;1.0;true;0.0;64.0;"
config.identity_flushing_cell          = "1k ME Storage Cell;appliedenergistics2:storage_cell_1k;0.0;true;0.0;1.0;"

--
config.maxSize_portableCell            = 4032
config.maxSlots_portableCell           = 63
config.maxSlots_money_storage          = 63 * 2

-- Timeouts
config.timeout_export                  = 60
config.price_lease_storage_cell        = 50


--
config.path_file_items                 = "/home/shop/items_dirtcraft.json"
config.path_mounts                     = { "/mnt/98a", "/mnt/510", "/mnt/fbd" }
config.path_accounts                   = "/mnt/98a/accounts/"
config.path_money_disks                = "/mnt/98a/money_disks.json"
config.path_logfile                    = "/mnt/510/shop.log"
config.path_logfile_transactions       = "/mnt/fbd/transactions.log"
config.log_lines_textbox               = 500
config.max_filesize_log                = 2 * 1024 * 1024 --2 MB
config.buyer_start_money               = config.price_lease_storage_cell + 50
config.owner                           = "kevinkk525"
config.shop_name                       = "KK's Shop"
config.version                         = "0.6Beta"
config.stock_scanning_interval         = 300 -- 5 minutes
config.dropper_export_max_slots        = 9
config.dropper_export_max_items        = 16
config.time_sync_url                   = nil
config.time_sync_interval              = nil


-- Notes ingame:
-- GriefPrevention allows access to screen with:
-- /cf interact-block-secondary opencomputers:screen3 true
-- not sure about primary, didn't work with that (only) but secondary alone works:
-- /cf interact-block-primary opencomputers:screen3 true
-- shift clicking works without screen access
-- make a subclaim for these permissions with /claimsubdivide and /cuboidclaims so
-- other screens are not accessible
-- except for with shift click, so be careful with GUIs on other screens

-- install forked GUI library from: pastebin run EVWjkBxg
-- OpenOS updater: pastebin run -f icKy25PF

return config